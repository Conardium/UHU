/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica_6_pcd;

import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.Semaphore;

/**
 *
 * @author ismae
 */
public class Generador extends java.awt.Frame {

    /**
     * Creates new form Generador
     */
    public Generador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        
        //Creacion de los semaforos
        Semaphore rayosXmaleta = new Semaphore(2);
        Semaphore rayosXmano = new Semaphore(1);
        Semaphore perros = new Semaphore(2);
        Semaphore galleta = new Semaphore(0);
        
        int[] ocupacionRayosXmaleta = {-1,-1}; //Para indicar la ocupacion de los rayosX de la maleta, si no hay nadie se pone -1
        int[] ocupacionPerros = {-1,-1}; //Para indicar la ocupacion de los perros, si no hay nadie se pone -1
        
        ArrayList<Float> vMaletas = new ArrayList<Float>();
        ArrayList<Float> vMano = new ArrayList<Float>();
        
        
        //Configuracion del Frame
        int nViajeros = 20; //numero de viajeros que se crearan
        int alto = 850, ancho = 1600;
        
        Generador frame = new Generador();
        CanvasAduana cv = new CanvasAduana(ancho, alto, nViajeros);
        
        Random random = new Random();
        random.setSeed(System.currentTimeMillis());
        
        frame.setVisible(true);
        frame.setLocation(200, 0);
        frame.setSize(ancho, alto);
        frame.setTitle("Practica 6 - Control de Aduanas");
        frame.add(cv);
        
        System.out.println("==== La Aduana est√° abierta ====");
        
        Thread cuidador = new Cuidador(perros, galleta, cv);
        cuidador.start();
        
        //===== Creacion de los viajeros =====
        Thread viajeros[] = new Thread[nViajeros];
        for (int i = 0; i < nViajeros; i++) {
            Thread.sleep((random.nextInt(3) + 1) * 1000); //Espera un tiempo antes de crear el siguiente viajero
            
            if (random.nextInt(10) < 5) { //Disminuir el valor para aumentar la probabilidad de que se generen Viajero de mano 
                viajeros[i] = new ViajeroMaleta(i, rayosXmaleta, perros, galleta, vMaletas, ocupacionRayosXmaleta, ocupacionPerros,cv);
            }
            else{
                viajeros[i] = new Thread(new ViajeroMano(i, rayosXmano, perros, galleta, vMano, ocupacionPerros, cv));
            }
            
            viajeros[i].start();
        }
        
        for (int i = 0; i < nViajeros; i++) {
            viajeros[i].join();
        }
        
        System.out.println("<<El cuidador termina su jornada y se va a casa>>");
        cuidador.interrupt(); //Una vez se vayan todos los viajeros el cuidador termina
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
