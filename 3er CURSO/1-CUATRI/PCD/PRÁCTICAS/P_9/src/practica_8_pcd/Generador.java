/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package practica_8_pcd;

import java.util.Random;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

/**
 *
 * @author ismae
 */
public class Generador extends java.awt.Frame {

    /**
     * Creates new form Generador
     */
    public Generador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException, ExecutionException {
        
        int nPersonas = 50; //Numero de personas a generar
        int ancho, alto;
        int tiempoDeReparacionTotal = 0;
        int tiempoDeCompraTotal = 0;
        ancho = 1300;
        alto = 800;
        
        CanvasTienda cv = new CanvasTienda(ancho, alto);
        
        Generador frame = new Generador();
        frame.setSize(ancho, alto);
        frame.setLocation(400, 0);
        frame.setVisible(true);
        frame.setTitle("Practica 8 - Tienda de Bicicletas");
        frame.add(cv);
        
        Random random = new Random();
        random.setSeed(System.currentTimeMillis());
        
        ExecutorService thpClientes = Executors.newFixedThreadPool(10);
        ExecutorService thpCiclistas = Executors.newFixedThreadPool(10);
        
        Tienda tienda = new Tienda(cv);
        
        int c = 0, r = 0;
        
        Future<Integer>[] fc = new Future[nPersonas]; //Clientes
        Future<Integer>[] fr = new Future[nPersonas]; //Ciclistas
        for (int i = 0; i < nPersonas; i++) {
            Thread.sleep((random.nextInt(3) + 1) * 1000);
            
            if(random.nextInt(10) < 5){ //Disminuir para que aparezcan mas ciclistas
                fc[c] = thpClientes.submit(new Cliente(tienda, i));
                c++;
            }
            else{
                fr[r] = thpCiclistas.submit(new Ciclista(tienda, i));
                r++;
            }
        }  
        
        int tiempo;
        for (int i = 0; i < c; i++) {
            tiempo = fc[i].get();
            System.out.println("\t\t\t\t<---- El cliente-" + i + " ha sido atendido en " + tiempo/1000 + " segundos");
            tiempoDeCompraTotal += tiempo;
        }
        
        for (int i = 0; i < r; i++) {
            tiempo = fr[i].get();
            System.out.println("\t\t\t\t<---- El ciclista-" + i + " ha sido atendido en " + tiempo/1000 + " segundos");
            tiempoDeReparacionTotal += tiempo;
        }
        
        System.out.println("\n\n************** La tienda de bicis ha cerrado (RESUMEN DEL DÍA)***************\n");
        System.out.println("\t\t-Tiempo de Compra total: " + tiempoDeCompraTotal/1000 + "s");
        System.out.println("\t\t-Tiempo de Reparación total: " + tiempoDeReparacionTotal/1000 + "s");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
