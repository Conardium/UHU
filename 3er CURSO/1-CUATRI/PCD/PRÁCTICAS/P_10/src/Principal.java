
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;





/**
 *
 * @author ismae
 */
public class Principal extends java.awt.Frame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        Principal f = new Principal();
        f.setSize(600, 400);
        f.setTitle("Practica 10 - Lectores/Escritores");
        MiCanvas cv = new MiCanvas(600, 400);
        f.add(cv);
        f.setVisible(true);
        
        ReentrantReadWriteLock L = new ReentrantReadWriteLock(true);
        
        for (int i = 0; i < 6; i++) {
            Lector l = new Lector(i, cv, L);
            l.start();
        }
        
        for (int i = 0; i < 3; i++) {
            Thread e = new Thread(new Escritor(i, cv, L));
            e.start();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
